# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
# Inputs the workflow accepts.
#    inputs:
#      name:
#        # Friendly description to be shown in the UI instead of 'name'
#        description: 'Person to greet'
#        # Default value if no value is explicitly provided
#        default: 'World'
#        # Input has to be provided for the workflow to run
#        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  greet:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    # Runs a single command using the runners shell
    - name: Send greeting
      run: |
        # echo "Hello ${{ github.event.inputs.name }}"
        # echo "$GITHUB_API_URL"
        tag_name="teste-$(date +"%Y%m%d-%H.%M.%S")"
        git config user.name github-actions
        git config user.email github-actions@github.com
        echo "$tag_name" >> tmp.txt
        git add .
        git commit -m "generated"
        git tag $tag_name
        git push --tags
        result=$(curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/releases \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data "{
            \"tag_name\": \"$tag_name\",
            \"name\": \"$tag_name\"
          }" \
          --silent)
        # echo "$result"
        echo $result | jq '.id'
        upload_url=$(echo $result | jq '.upload_url')
        echo $upload_url
        curl \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --url "$upload_url?name=teste&label=teste" \
          --data-binary @tmp.txt \
          --silent
#    - name: View context attributes
#      uses: actions/github-script@v4
#      with:
#        script: console.log(context)
#    - name: PRERELEASE
#      uses: actions/github-script@v4
#      with:
#        github-token: ${{secrets.GITHUB_TOKEN}}
#        script: |
#          const { exec } = require('child_process');
#          const { repo: { owner, repo }, sha } = context;
#          const release = await github.repos.createRelease({
#              owner, repo,
#              tag_name: process.env.GITHUB_REF,
#              prerelease: true,
#              name: github.event.inputs.name,
#              body: "teste"
#          });
#          exec('git describe --tags --abbrev=0')
#          await github.repos.listTags({owner, repo});
